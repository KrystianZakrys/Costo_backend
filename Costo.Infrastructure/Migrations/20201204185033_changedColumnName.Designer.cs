// <auto-generated />
using System;
using Costo.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Costo.Infrastructure.Migrations
{
    [DbContext(typeof(CostoContext))]
    [Migration("20201204185033_changedColumnName")]
    partial class changedColumnName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Costo.Domain.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountTypeString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AccountType");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Costo.Domain.Entities.SavingsGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GoalValue")
                        .HasColumnType("money");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("SavingsGoals");
                });

            modelBuilder.Entity("Costo.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionTypeString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransactionType");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8452bfe8-d937-4584-8c45-d9b792616180"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 704, DateTimeKind.Local).AddTicks(3776),
                            Description = "...",
                            IconString = "Money",
                            Name = "Wypłata",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b42895a4-315b-4e89-96a0-acd7dda7a7e6"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7462),
                            Description = "...",
                            IconString = "Money",
                            Name = "Przychód",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b8027ac9-8478-44da-9103-5f04adf057ad"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7510),
                            Description = "...",
                            IconString = "Money",
                            Name = "Wydatek",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0b843fcc-4eba-4295-81f9-f2b47eb7dc2a"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7515),
                            Description = "...",
                            IconString = "Money",
                            Name = "Zakupy spożywcze",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("79f7bf4f-4ad3-4f53-80b5-5ee2726390f6"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7531),
                            Description = "...",
                            IconString = "Money",
                            Name = "Transport",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e74f5675-0488-445d-8857-75c636154b7f"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7535),
                            Description = "...",
                            IconString = "Money",
                            Name = "Zdrowie",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a3835d92-6676-477e-8174-b587c87fcfe6"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7538),
                            Description = "...",
                            IconString = "Money",
                            Name = "Rozrywka",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("255dabe5-61c2-4f48-a247-06a74d843936"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7542),
                            Description = "...",
                            IconString = "Money",
                            Name = "Dom",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f66b2a1b-31d3-49c9-ac73-62ca18c03508"),
                            CreateDate = new DateTime(2020, 12, 4, 19, 50, 32, 707, DateTimeKind.Local).AddTicks(7545),
                            Description = "...",
                            IconString = "Money",
                            Name = "Restauracje",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Costo.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Costo.Domain.Entities.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Costo.Domain.Entities.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId");

                    b.Navigation("BankAccount");

                    b.Navigation("TransactionCategory");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.HasOne("Costo.Domain.Entities.TransactionCategory", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("TransactionCategoryId");
                });

            modelBuilder.Entity("Costo.Domain.Entities.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
