// <auto-generated />
using System;
using Costo.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Costo.Infrastructure.Migrations
{
    [DbContext(typeof(CostoContext))]
    [Migration("20201205153001_AddedColorToCategory")]
    partial class AddedColorToCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Costo.Domain.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountTypeString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AccountType");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Costo.Domain.Entities.SavingsGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GoalValue")
                        .HasColumnType("money");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("SavingsGoals");
                });

            modelBuilder.Entity("Costo.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionTypeString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransactionType");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("961ce142-c72c-4812-9536-e7da1e2501b4"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 553, DateTimeKind.Local).AddTicks(4870),
                            Description = "...",
                            IconString = "Money",
                            Name = "Wypłata",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d507dd46-18b9-4579-ab0e-aa33c74cf5e0"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1438),
                            Description = "...",
                            IconString = "Money",
                            Name = "Przychód",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5f032030-a767-4666-a5ff-09828b106ee3"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1492),
                            Description = "...",
                            IconString = "Money",
                            Name = "Wydatek",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d76e95dd-9d10-45fc-b90b-b84877e3cdbe"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1498),
                            Description = "...",
                            IconString = "Money",
                            Name = "Zakupy spożywcze",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a2ed6de7-be3f-4982-9072-3c6f908e3ab2"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1502),
                            Description = "...",
                            IconString = "Money",
                            Name = "Transport",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("86c31316-975b-42af-a348-289b47381e65"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1506),
                            Description = "...",
                            IconString = "Money",
                            Name = "Zdrowie",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("decda3d0-7055-43c9-b55f-6b19c77c78ca"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1510),
                            Description = "...",
                            IconString = "Money",
                            Name = "Rozrywka",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("22d028f4-57fd-44ad-b8ee-8c75bbd47e31"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1514),
                            Description = "...",
                            IconString = "Money",
                            Name = "Dom",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a8f93cc5-79bb-4150-b562-bd20cab17f52"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 30, 0, 557, DateTimeKind.Local).AddTicks(1529),
                            Description = "...",
                            IconString = "Money",
                            Name = "Restauracje",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Costo.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Costo.Domain.Entities.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Costo.Domain.Entities.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId");

                    b.Navigation("BankAccount");

                    b.Navigation("TransactionCategory");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.HasOne("Costo.Domain.Entities.TransactionCategory", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("TransactionCategoryId");
                });

            modelBuilder.Entity("Costo.Domain.Entities.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
