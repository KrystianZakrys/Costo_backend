// <auto-generated />
using System;
using Costo.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Costo.Infrastructure.Migrations
{
    [DbContext(typeof(CostoContext))]
    [Migration("20201205154337_RestoreData")]
    partial class RestoreData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Costo.Domain.Entities.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountTypeString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AccountType");

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Costo.Domain.Entities.SavingsGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GoalValue")
                        .HasColumnType("money");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("SavingsGoals");
                });

            modelBuilder.Entity("Costo.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionTypeString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransactionType");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconString")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Icon");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66b251e2-5e24-4651-98ba-56e86487eb27"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 737, DateTimeKind.Local).AddTicks(9944),
                            Description = "...",
                            IconString = "Money",
                            Name = "Wypłata",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("65176457-697f-4d37-91d7-81737f355ad7"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2888),
                            Description = "...",
                            IconString = "Money",
                            Name = "Przychód",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c36e5b1c-54ee-40ad-8134-2557919ab06a"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2920),
                            Description = "...",
                            IconString = "Money",
                            Name = "Wydatek",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e58260c4-cc20-43ee-af5a-d912280d02c1"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2925),
                            Description = "...",
                            IconString = "Money",
                            Name = "Zakupy spożywcze",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("59a4b180-eff9-4fbd-93f2-01f6c320fdf0"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2929),
                            Description = "...",
                            IconString = "Money",
                            Name = "Transport",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("371a865a-b34f-44d0-b121-3529142fe91c"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2933),
                            Description = "...",
                            IconString = "Money",
                            Name = "Zdrowie",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("abe643b0-b344-412c-898a-3c0ff586c433"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2936),
                            Description = "...",
                            IconString = "Money",
                            Name = "Rozrywka",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fb9fa1d3-408d-45e0-9632-d5491df0e7ed"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2940),
                            Description = "...",
                            IconString = "Money",
                            Name = "Dom",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5999e27f-1e51-4b49-a842-4acd5d10c3f4"),
                            ColorString = "Blue",
                            CreateDate = new DateTime(2020, 12, 5, 16, 43, 36, 741, DateTimeKind.Local).AddTicks(2953),
                            Description = "...",
                            IconString = "Money",
                            Name = "Restauracje",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Costo.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Costo.Domain.Entities.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Costo.Domain.Entities.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId");

                    b.Navigation("BankAccount");

                    b.Navigation("TransactionCategory");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.HasOne("Costo.Domain.Entities.TransactionCategory", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("TransactionCategoryId");
                });

            modelBuilder.Entity("Costo.Domain.Entities.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Costo.Domain.Entities.TransactionCategory", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
